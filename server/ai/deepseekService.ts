import { storage } from "../storage";

interface DeepSeekResponse {
  choices: Array<{
    message: {
      content: string;
    };
  }>;
}

interface BlogContentStructure {
  title: string;
  excerpt: string;
  content: string;
  metaDescription: string;
  keywords: string[];
  tags: string[];
  readTime: string;
  faq: Array<{ question: string; answer: string }>;
}

export class DeepSeekService {
  private apiKey: string;
  private baseUrl = "https://api.deepseek.com/v1/chat/completions";

  constructor() {
    this.apiKey = process.env.DEEPSEEK_API_KEY || "";
    if (!this.apiKey) {
      throw new Error("DEEPSEEK_API_KEY environment variable is required");
    }
  }

  async generateBlogContent(topic: string, keywords: string[], category: string): Promise<BlogContentStructure> {
    const prompt = this.createContentPrompt(topic, keywords, category);
    
    try {
      const response = await this.callDeepSeek(prompt);
      const content = this.parseContentResponse(response);
      
      // Log successful generation
      await this.logGeneration(prompt, JSON.stringify(content), true);
      
      return content;
    } catch (error) {
      // Log failed generation
      await this.logGeneration(prompt, "", false, error instanceof Error ? error.message : "Unknown error");
      throw error;
    }
  }

  private createContentPrompt(topic: string, keywords: string[], category: string): string {
    return `Du bist ein professioneller SEO-Content-Writer für Walter Braun Umzüge, ein Münchner Umzugsunternehmen. 

AUFGABE: Erstelle einen umfassenden, SEO-optimierten Blog-Artikel über "${topic}" in der Kategorie "${category}".

KEYWORDS ZU VERWENDEN: ${keywords.join(", ")}

STÄDTE FÜR LOCAL SEO: München, Moers, Düsseldorf, Duisburg, Schwabing, Maxvorstadt, Sendling, Bogenhausen, Lehel

ANFORDERUNGEN:
- Mindestens 1500 Wörter
- Deutscher Content, professioneller Stil
- Münchner Bezug und lokale Expertise
- Natürliche Keyword-Integration
- Praktische Tipps und Ratschläge
- Vertrauenswürdige, hilfreiche Informationen

STRUKTUR:
1. Einleitung (Hook + Problem)
2. Hauptteil (3-4 Hauptabschnitte)
3. Praktische Tipps
4. Lokaler München-Bezug
5. Fazit mit Call-to-Action

FAQ: Erstelle 5-7 häufige Fragen mit ausführlichen Antworten.

AUSGABE-FORMAT (JSON):
{
  "title": "SEO-optimierter Titel (max 60 Zeichen)",
  "excerpt": "Kurze Zusammenfassung (150-160 Zeichen)",
  "content": "Vollständiger Artikel-Content in Markdown",
  "metaDescription": "Meta-Description (150-160 Zeichen)",
  "keywords": ["keyword1", "keyword2", ...],
  "tags": ["tag1", "tag2", ...],
  "readTime": "X Min. Lesezeit",
  "faq": [
    {
      "question": "Frage 1?",
      "answer": "Ausführliche Antwort..."
    }
  ]
}

Erstelle jetzt den Artikel:`;
  }

  private async callDeepSeek(prompt: string): Promise<string> {
    const response = await fetch(this.baseUrl, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${this.apiKey}`
      },
      body: JSON.stringify({
        model: "deepseek-chat",
        messages: [
          {
            role: "user",
            content: prompt
          }
        ],
        temperature: 0.7,
        max_tokens: 4000
      })
    });

    if (!response.ok) {
      throw new Error(`DeepSeek API error: ${response.status} ${response.statusText}`);
    }

    const data: DeepSeekResponse = await response.json();
    
    if (!data.choices || data.choices.length === 0) {
      throw new Error("No content generated by DeepSeek");
    }

    return data.choices[0].message.content;
  }

  private parseContentResponse(response: string): BlogContentStructure {
    try {
      // Extract JSON from response (in case there's additional text)
      const jsonMatch = response.match(/\{[\s\S]*\}/);
      if (!jsonMatch) {
        throw new Error("No valid JSON found in response");
      }

      const parsed = JSON.parse(jsonMatch[0]);
      
      // Validate required fields
      if (!parsed.title || !parsed.content || !parsed.excerpt) {
        throw new Error("Missing required fields in generated content");
      }

      return {
        title: parsed.title,
        excerpt: parsed.excerpt,
        content: parsed.content,
        metaDescription: parsed.metaDescription || parsed.excerpt,
        keywords: parsed.keywords || [],
        tags: parsed.tags || [],
        readTime: parsed.readTime || "5 Min. Lesezeit",
        faq: parsed.faq || []
      };
    } catch (error) {
      throw new Error(`Failed to parse DeepSeek response: ${error instanceof Error ? error.message : "Unknown error"}`);
    }
  }

  private async logGeneration(prompt: string, response: string, success: boolean, error?: string): Promise<void> {
    try {
      await storage.createAiLog({
        type: "content",
        prompt: prompt.substring(0, 1000), // Limit prompt length
        response: response.substring(0, 2000), // Limit response length
        model: "deepseek",
        success,
        error: error || null
      });
    } catch (logError) {
      console.error("Failed to log DeepSeek generation:", logError);
    }
  }

  // Generate topic ideas for the blog ideas pool
  async generateTopicIdeas(count: number = 20): Promise<Array<{ topic: string; category: string; keywords: string[] }>> {
    const prompt = `Du bist Content-Strategist für Walter Braun Umzüge in München. 

Erstelle ${count} Blog-Themen für ein Umzugsunternehmen mit den Kategorien:
- Umzugstipps
- Packen & Organisieren  
- München & Umgebung
- Geschäftsumzüge
- Umzugsrecht & Versicherung
- Haushalt & Wohnen

ANFORDERUNGEN:
- Relevante Keywords für SEO
- München/Bayern-Bezug wo möglich
- Praktischer Nutzen für Leser
- Verschiedene Schwierigkeitsgrade

AUSGABE-FORMAT (JSON):
{
  "ideas": [
    {
      "topic": "Konkretes Thema",
      "category": "Kategorie",
      "keywords": ["keyword1", "keyword2", "keyword3"]
    }
  ]
}`;

    try {
      const response = await this.callDeepSeek(prompt);
      const parsed = JSON.parse(response.match(/\{[\s\S]*\}/)?.[0] || "{}");
      
      return parsed.ideas || [];
    } catch (error) {
      console.error("Failed to generate topic ideas:", error);
      return [];
    }
  }
}