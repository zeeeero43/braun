import { storage } from "../storage";

interface DeepSeekResponse {
  choices: Array<{
    message: {
      content: string;
    };
  }>;
}

interface BlogContentStructure {
  title: string;
  excerpt: string;
  content: string;
  metaDescription: string;
  keywords: string[];
  tags: string[];
  readTime: string;
  faq: Array<{ question: string; answer: string }>;
}

export class DeepSeekService {
  private apiKey: string;
  private baseUrl = "https://api.deepseek.com/v1/chat/completions";

  constructor() {
    this.apiKey = process.env.DEEPSEEK_API_KEY || "";
    if (!this.apiKey) {
      throw new Error("DEEPSEEK_API_KEY environment variable is required");
    }
  }

  async generateBlogContent(topic: string, keywords: string[], category: string): Promise<BlogContentStructure> {
    const prompt = this.createContentPrompt(topic, keywords, category);
    
    try {
      const response = await this.callDeepSeek(prompt);
      const content = this.parseContentResponse(response);
      
      // Log successful generation
      await this.logGeneration(prompt, JSON.stringify(content), true);
      
      return content;
    } catch (error) {
      // Log failed generation
      await this.logGeneration(prompt, "", false, error instanceof Error ? error.message : "Unknown error");
      throw error;
    }
  }

  private createContentPrompt(topic: string, keywords: string[], category: string): string {
    return `Du bist ein Experte f√ºr SEO-Content und schreibst f√ºr Walter Braun Umz√ºge, ein professionelles Umzugsunternehmen in M√ºnchen. 

AUFGABE: Erstelle einen umfassenden, 10/10 SEO-optimierten Blog-Artikel √ºber "${topic}" in der Kategorie "${category}".

HAUPT-KEYWORDS: ${keywords.join(", ")}
LOKALE KEYWORDS: M√ºnchen, Schwabing, Maxvorstadt, Sendling, Bogenhausen, Lehel, Isarvorstadt, Haidhausen

KRITISCHE SEO-ANFORDERUNGEN (NICHT VERHANDELBAR!):
‚úì EXAKT MINDESTENS 3000 W√∂rter! (Z√§hle W√∂rter am Ende - unter 2500 W√∂rtern = AUTOMATISCHE ABLEHNUNG!)
‚úì JEDER Hauptabschnitt muss EXAKT 700-900 W√∂rter enthalten (nicht weniger!)
‚úì PFLICHT: 6 umfangreiche Hauptabschnitte (niemals nur 3-4!)
‚úì Einleitung muss EXAKT 350+ W√∂rter haben
‚úì WORTREICH schreiben - jede Erkl√§rung ausf√ºhrlich und detailliert!
‚úì Hauptkeyword in ersten 100 W√∂rtern + H1-Titel
‚úì Keywords nat√ºrlich verteilt (1-2% Keyword-Dichte)
‚úì Lokale M√ºnchen-Bez√ºge in jedem Hauptabschnitt
‚úì Interne Verlinkung zu anderen Themen (Format: [Text](/blog/umzugstipps-muenchen))
‚úì Praktische, umsetzbare Ratschl√§ge mit Checklisten
‚úì Expertise und Vertrauen vermitteln durch Fachkompetenz
‚úì ALLE Tabellen m√ºssen als HTML-Tabellen erstellt werden (NIEMALS Markdown!)
‚úì MEHR INHALT STATT FAQ-FOKUS! Priorit√§t: 2500+ W√∂rter Content, 6-8 FAQ
‚úì KEINE Download-Links, Platzhalter oder generische Phrasen
‚úì FAQ ABSOLUT NICHT im Content erw√§hnen - NIEMALS "FAQ", "H√§ufige Fragen" etc. im Artikel!
‚úì FAQ nur in separater JSON-Sektion am Ende!

STRUKTUR (PFLICHT - MINDESTENS 3000 W√ñRTER ABSOLUT ERFORDERLICH!):
# H1-Titel mit Hauptkeyword (KEINE Wortanzahl-Hinweise!)
## Einleitung (EXAKT 400+ W√∂rter - detaillierte Problemstellung!)
## 1. Hauptabschnitt (EXAKT 600+ W√∂rter mit 3-4 H3-Unter√ºberschriften)
## 2. Hauptabschnitt (EXAKT 600+ W√∂rter mit 3-4 H3-Unter√ºberschriften)
## 3. Hauptabschnitt (EXAKT 500+ W√∂rter mit 2-3 H3-Unter√ºberschriften)
## 4. Hauptabschnitt (EXAKT 500+ W√∂rter mit 2-3 H3-Unter√ºberschriften)
## 5. Praktische Checkliste/Tabelle (EXAKT 300+ W√∂rter mit ausf√ºhrlicher Tabelle)
## 6. M√ºnchen-Spezifische Tipps (EXAKT 400+ W√∂rter mit lokalen Details)
## 7. Expertenrat von Walter Braun Umz√ºge (EXAKT 350+ W√∂rter mit Fallbeispielen)
## 8. Fazit + Handlungsaufforderung (EXAKT 250+ W√∂rter mit Call-to-Action)

KRITISCHE ANWEISUNG:
- Schreibe JEDEN Abschnitt VOLLST√ÑNDIG aus!
- KEINE Abk√ºrzungen oder Platzhalter!
- JEDEN H3-Unterabschnitt mit mindestens 150+ W√∂rtern!
- Verwende konkrete Beispiele, Zahlen, Adressen, Preise!
- Z√ÑHLE die W√∂rter w√§hrend dem Schreiben!

L√ÑNGEN-KONTROLLE:
- Schreibe in JEDEM Abschnitt detaillierte Erkl√§rungen
- Verwende konkrete Beispiele und Zahlen
- F√ºge praktische Tipps und Checklisten hinzu
- Erkl√§re lokale M√ºnchen-Besonderheiten ausf√ºhrlich

WICHTIG - √úBERSCHRIFTEN:
- Schreibe NIEMALS "(XXX W√∂rter)" oder √§hnliche Hinweise in √úberschriften!
- Alle √úberschriften m√ºssen professionell und vollst√§ndig ausformuliert sein
- Beispiel FALSCH: "## 2. IT-Umzug: Datenverlust vermeiden (400 W√∂rter)"  
- Beispiel RICHTIG: "## 2. IT-Umzug: So vermeiden Sie Datenverlust beim B√ºroumzug"

TABELLEN-FORMAT (KRITISCH!):
- NIEMALS Markdown-Tabellen (| Syntax)!
- ALLE Tabellen m√ºssen HTML-Format haben:
<table class="w-full border-collapse border border-gray-300 text-sm">
  <thead>
    <tr class="bg-green-50">
      <th class="border border-gray-300 px-4 py-2 text-left">Spalte 1</th>
      <th class="border border-gray-300 px-4 py-2 text-left">Spalte 2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td class="border border-gray-300 px-4 py-2">Inhalt 1</td>
      <td class="border border-gray-300 px-4 py-2">Inhalt 2</td>
    </tr>
  </tbody>
</table>

FAQ-OPTIMIERUNG f√ºr Featured Snippets:
- GENAU 8 ausf√ºhrliche Fragen (nicht weniger!)
- Jede Antwort 80-120 W√∂rter (sehr detailliert und wertvoll)
- W-Fragen verwenden (Wie, Was, Warum, Wann, Wo, Welche)
- Hauptkeyword in 3-4 FAQ-Fragen einbauen
- Lokale M√ºnchen-Fragen zu verschiedenen Stadtteilen
- Verschiedene Schwierigkeitsgrade (Anf√§nger bis Experte)
- Konkrete Zahlen, Preise und Termine in jeder Antwort
- Pro-Tipps und Insider-Wissen von Walter Braun Umz√ºge

AUSGABE-FORMAT (JSON):
{
  "title": "Keyword-optimierter Titel 50-60 Zeichen",
  "excerpt": "√úberzeugende Meta-Description 150-160 Zeichen mit Hauptkeyword",
  "content": "Vollst√§ndiger 2000-2500 Wort Markdown-Artikel",
  "metaDescription": "Separate Meta-Description mit Call-to-Action",
  "keywords": ["haupt-keyword", "synonym1", "longtail-keyword", "lokal-muenchen"],
  "tags": ["Haupttag", "Kategorietag", "Lokaltag"],
  "readTime": "X Min. Lesezeit",
  "faq": [
    {
      "question": "Wie/Was/Warum-Frage mit Keyword?",
      "answer": "Detaillierte 60-100 W√∂rter Antwort mit M√ºnchen-spezifischen Details, konkreten Zahlen und Expertenwissen."
    }
  ]
}

WICHTIG: 
- Keine generischen Floskeln oder F√ºllw√∂rter
- Jeder Satz muss Mehrwert bieten  
- Lokale M√ºnchen-Expertise durchgehend zeigen
- Walter Braun Umz√ºge als Experte positionieren
- Konkrete Zahlen, Fakten, Beispiele verwenden
- SEHR LANGE, AUSF√úHRLICHE ARTIKEL (min. 3000 W√∂rter - Z√ÑHLE W√ÑHREND DEM SCHREIBEN!)
- Jeder Abschnitt muss MINDESTENS die angegebene Wortanzahl haben
- Detaillierte Erkl√§rungen mit konkreten Beispielen, Zahlen, Preisen
- NIEMALS oberfl√§chliche oder kurze Antworten
- Schreibe wie ein Experten-Ratgeber, nicht wie ein Blog-√úberblick

BEISPIELE f√ºr professionelle √úberschriften:
- FALSCH: "## Schulwechsel in Bayern organisieren (500 W√∂rter)"
- RICHTIG: "## Schulwechsel in Bayern: So gelingt die Anmeldung an M√ºnchner Schulen"
- FALSCH: "## 2. IT-Umzug: Datenverlust vermeiden (400 W√∂rter)"  
- RICHTIG: "## IT-Umzug ohne Datenverlust: Professionelle Server-Migration"

BEISPIEL f√ºr ausf√ºhrlichen Content:
Statt "Kartons richtig packen" ‚Üí "Schwere Gegenst√§nde wie B√ºcher geh√∂ren in kleine Kartons (max. 30x40cm), da ein gro√üer Karton mit B√ºchern schnell 25-30kg wiegt und selbst f√ºr trainierte Umzugshelfer zu schwer wird. In M√ºnchen sind enge Treppenh√§user in Altbauten wie in Schwabing oder der Maxvorstadt besonders herausfordernd..."

Erstelle jetzt den ausf√ºhrlichen, hochwertigen SEO-Artikel:`;
  }

  private async callDeepSeek(prompt: string): Promise<string> {
    console.log("üîÑ Calling DeepSeek API...");
    
    const response = await fetch(this.baseUrl, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${this.apiKey}`
      },
      body: JSON.stringify({
        model: "deepseek-chat",
        messages: [
          {
            role: "user",
            content: prompt
          }
        ],
        temperature: 0.7,
        max_tokens: 12000
      })
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error(`‚ùå DeepSeek API error: ${response.status} ${response.statusText} - ${errorText}`);
      throw new Error(`DeepSeek API error: ${response.status} ${response.statusText}`);
    }

    const data: DeepSeekResponse = await response.json();
    console.log("‚úÖ DeepSeek API response received");
    
    if (!data.choices || data.choices.length === 0) {
      console.error("‚ùå No choices in DeepSeek response:", data);
      throw new Error("No content generated by DeepSeek");
    }

    const content = data.choices[0].message.content;
    console.log(`üìù Generated content length: ${content.length} characters`);
    
    return content;
  }

  private parseContentResponse(response: string): BlogContentStructure {
    try {
      console.log("üîç Parsing DeepSeek response...");
      
      // Extract JSON from response (in case there's additional text)
      const jsonMatch = response.match(/\{[\s\S]*\}/);
      if (!jsonMatch) {
        console.error("‚ùå No JSON found in response:", response.substring(0, 500));
        throw new Error("No valid JSON found in response");
      }

      const parsed = JSON.parse(jsonMatch[0]);
      console.log("‚úÖ JSON parsed successfully");
      
      // Validate required fields
      if (!parsed.title || !parsed.content || !parsed.excerpt) {
        console.error("‚ùå Missing required fields:", { 
          hasTitle: !!parsed.title, 
          hasContent: !!parsed.content, 
          hasExcerpt: !!parsed.excerpt 
        });
        throw new Error("Missing required fields in generated content");
      }

      console.log("‚úÖ All required fields present");
      
      const result = {
        title: parsed.title,
        excerpt: parsed.excerpt,
        content: parsed.content,
        metaDescription: parsed.metaDescription || parsed.excerpt,
        keywords: parsed.keywords || [],
        tags: parsed.tags || [],
        readTime: parsed.readTime || "5 Min. Lesezeit",
        faq: parsed.faq || []
      };
      
      console.log(`üìä Content stats: Title length: ${result.title.length}, Content length: ${result.content.length}`);
      return result;
      
    } catch (error) {
      console.error("‚ùå Failed to parse response:", error);
      throw new Error(`Failed to parse DeepSeek response: ${error instanceof Error ? error.message : "Unknown error"}`);
    }
  }

  private async logGeneration(prompt: string, response: string, success: boolean, error?: string): Promise<void> {
    try {
      await storage.createAiLog({
        type: "content",
        prompt: prompt.substring(0, 1000), // Limit prompt length
        response: response.substring(0, 2000), // Limit response length
        model: "deepseek",
        success,
        error: error || null
      });
    } catch (logError) {
      console.error("Failed to log DeepSeek generation:", logError);
    }
  }

  // Generate optimized image description for Runware API
  async generateImageDescription(title: string, category: string): Promise<string> {
    const prompt = `Du bist Experte f√ºr AI-Bildgenerierung. Erstelle eine detaillierte, professionelle Bildbeschreibung f√ºr Runware AI f√ºr folgenden Blog-Artikel:

TITEL: "${title}"
KATEGORIE: "${category}"

ANFORDERUNGEN:
- Fotorealistischer Stil, professionell
- M√ºnchen/Bayern-Bezug wo passend
- Umzugs-/Business-Kontext
- Hochwertig, vertrauensw√ºrdig
- 16:9 Format
- Tageslicht, moderne Optik

BEISPIELE:
Umzugstipps: "Professional moving team wearing branded uniforms loading a modern truck in Munich, Bavarian architecture in background, organized moving boxes, sunny day, high-end residential area, professional photography, bright natural lighting, trustworthy atmosphere, 16:9 aspect ratio"

Gesch√§ftsumzug: "Business relocation scene in Munich office district, professional movers in suits handling office equipment, modern glass buildings, corporate environment, systematic organization, daylight through windows, premium business atmosphere, photorealistic, 16:9"

Erstelle jetzt eine √§hnlich detaillierte Beschreibung f√ºr den gegebenen Titel:`;

    try {
      const response = await this.callDeepSeek(prompt);
      // Extract just the description, remove any additional text
      const cleanDescription = response.trim().replace(/^["']|["']$/g, '');
      console.log(`üé® Generated image description: ${cleanDescription.substring(0, 100)}...`);
      return cleanDescription;
    } catch (error) {
      console.error("‚ùå Failed to generate image description:", error);
      // Fallback to category-based description
      const fallbackPrompts = {
        "Umzugstipps": "Professional moving team in Munich, modern moving truck, organized boxes, sunny day, German cityscape background",
        "Gesch√§ftsumz√ºge": "Business office relocation, professional team, modern office equipment, corporate environment",
        "M√ºnchen & Umgebung": "Munich cityscape, Bavarian architecture, professional moving services, trustworthy atmosphere"
      };
      return fallbackPrompts[category as keyof typeof fallbackPrompts] || fallbackPrompts["Umzugstipps"];
    }
  }

  // Generate topic ideas for the blog ideas pool
  async generateTopicIdeas(count: number = 20): Promise<Array<{ topic: string; category: string; keywords: string[] }>> {
    const prompt = `Du bist Content-Strategist f√ºr Walter Braun Umz√ºge in M√ºnchen. 

Erstelle ${count} Blog-Themen f√ºr ein Umzugsunternehmen mit den Kategorien:
- Umzugstipps
- Packen & Organisieren  
- M√ºnchen & Umgebung
- Gesch√§ftsumz√ºge
- Umzugsrecht & Versicherung
- Haushalt & Wohnen

ANFORDERUNGEN:
- Relevante Keywords f√ºr SEO
- M√ºnchen/Bayern-Bezug wo m√∂glich
- Praktischer Nutzen f√ºr Leser
- Verschiedene Schwierigkeitsgrade

AUSGABE-FORMAT (JSON):
{
  "ideas": [
    {
      "topic": "Konkretes Thema",
      "category": "Kategorie",
      "keywords": ["keyword1", "keyword2", "keyword3"]
    }
  ]
}`;

    try {
      const response = await this.callDeepSeek(prompt);
      const parsed = JSON.parse(response.match(/\{[\s\S]*\}/)?.[0] || "{}");
      
      return parsed.ideas || [];
    } catch (error) {
      console.error("Failed to generate topic ideas:", error);
      return [];
    }
  }
}