import { storage } from "../storage";

interface RunwareResponse {
  data: Array<{
    imageURL: string;
    imageName: string;
  }>;
}

export class RunwareService {
  private apiKey: string;
  private baseUrl = "https://api.runware.ai/v1";

  constructor() {
    this.apiKey = process.env.RUNWARE_API_KEY || "ze0oMKK1mkscXUoWaDjkJEYJ29BfqKj5";
    if (!this.apiKey) {
      throw new Error("RUNWARE_API_KEY environment variable is required");
    }
  }

  async generateBlogImage(title: string, category: string): Promise<{ imageUrl: string; imageAlt: string; imagePrompt: string }> {
    const prompt = this.createImagePrompt(title, category);
    
    try {
      const response = await this.callRunware(prompt);
      const imageAlt = this.generateImageAlt(title, category);
      
      // Log successful generation
      await this.logGeneration(prompt, response.imageURL, true);
      
      return {
        imageUrl: response.imageURL,
        imageAlt,
        imagePrompt: prompt
      };
    } catch (error) {
      // Log failed generation
      await this.logGeneration(prompt, "", false, error instanceof Error ? error.message : "Unknown error");
      throw error;
    }
  }

  private createImagePrompt(title: string, category: string): string {
    const basePrompts = {
      "Umzugstipps": "Professional moving team in Munich, modern moving truck, organized boxes, sunny day, German cityscape background",
      "Packen & Organisieren": "Neatly organized moving boxes, professional packing materials, clean modern interior, systematic organization",
      "München & Umgebung": "Munich skyline, traditional Bavarian architecture, modern moving services, professional business environment",
      "Geschäftsumzüge": "Business office relocation, professional team in suits, modern office equipment, corporate environment",
      "Umzugsrecht & Versicherung": "Professional consultation, documents on desk, handshake, business meeting, trust and reliability",
      "Haushalt & Wohnen": "Beautiful modern home interior, family setting, comfortable living space, new home atmosphere"
    };

    const categoryPrompt = basePrompts[category as keyof typeof basePrompts] || basePrompts["Umzugstipps"];
    
    return `${categoryPrompt}, high quality, professional photography, bright lighting, modern style, German business environment, trustworthy atmosphere, 16:9 aspect ratio, photorealistic`;
  }

  private generateImageAlt(title: string, category: string): string {
    return `${title} - Professionelle Umzugsdienstleistungen in München | Walter Braun Umzüge`;
  }

  private async callRunware(prompt: string): Promise<{ imageURL: string; imageName: string }> {
    const response = await fetch(`${this.baseUrl}/image`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${this.apiKey}`
      },
      body: JSON.stringify({
        prompt,
        model: "runware:100@1",
        numberofImages: 1,
        height: 720,
        width: 1280,
        steps: 25,
        CFGScale: 7,
        seed: Math.floor(Math.random() * 1000000)
      })
    });

    if (!response.ok) {
      const errorText = await response.text();
      throw new Error(`Runware API error: ${response.status} ${response.statusText} - ${errorText}`);
    }

    const data: RunwareResponse = await response.json();
    
    if (!data.data || data.data.length === 0) {
      throw new Error("No image generated by Runware");
    }

    return {
      imageURL: data.data[0].imageURL,
      imageName: data.data[0].imageName || "blog-image"
    };
  }

  private async logGeneration(prompt: string, response: string, success: boolean, error?: string): Promise<void> {
    try {
      await storage.createAiLog({
        type: "image",
        prompt: prompt.substring(0, 1000),
        response: response.substring(0, 500),
        model: "runware",
        success,
        error: error || null
      });
    } catch (logError) {
      console.error("Failed to log Runware generation:", logError);
    }
  }
}